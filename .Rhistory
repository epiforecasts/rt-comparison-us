geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
View(count_all_national)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths))
View(count_all_national)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
#coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
library(ggplot2)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
#coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
library(ggplot2)
plot(plot_count_national)
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`))
plot(plot_count_national)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
#coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
#scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
rename(cases = Cases, deaths = Deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
rename(Cases = cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date"))
colnames(count_all_national)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
rename(Cases = cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
rename(cases = Cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
select(date, Cases = cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
library(dplyr)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
select(date, Cases = cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
View(count_all_national)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
select(date, cases = Ccases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
select(date, cases = Cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
select(date, cases = cases, Deaths = deaths) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
national_count_deaths <- count_deaths %>%
group_by(date) %>%
summarise(Deaths = sum(deaths))
national_count_cases <- count_cases %>%
group_by(date) %>%
summarise(Cases = sum(cases))
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
pivot_longer(cols = c(cases, deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
national_count_deaths <- count_deaths %>%
group_by(date) %>%
summarise(deaths = sum(deaths))
national_count_cases <- count_cases %>%
group_by(date) %>%
summarise(cases = sum(cases))
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
rename(Cases = cases, Deaths = deaths)
count_all_national <- left_join(national_count_cases, national_count_deaths, by = c("date")) %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
rename(Cases = cases, Deaths = deaths) %>%
pivot_longer(cols = c(Cases, Deaths)) %>%
group_by(name) %>%
mutate(z_score = scale(value, center = TRUE, scale = TRUE)) %>%
ungroup() %>%
rename("Data source" = name, Date = date)
count_all_national$`Data source` <- factor(count_all_national$`Data source`,
levels = c("Combined", "Cases", "Deaths"))
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
#coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
# Set colours
colours <- c(
"Combined" = "#d95f02",
"Cases" = "#7570b3",
"Deaths" = "#66a61e"
)
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
#facet_wrap(~ Geography, nrow = 1) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
plot(national_linerange)
# Set colours
colours <- c(
"Combined" = "#ffffbf",
"Cases" = "#91bfdb",
"Deaths" = "#fc8d59"
)
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
#facet_wrap(~ Geography, nrow = 1) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
plot(national_linerange)
# Set colours
colours <- c(
"Combined" = "#bdbdbd",
"Cases" = "#91bfdb",
"Deaths" = "#fc8d59"
)
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
#facet_wrap(~ Geography, nrow = 1) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
plot(national_linerange)
# Set colours
colours <- c(
"Combined" = "#700A97",
"Cases" = "#FE5803",
"Deaths" = "#0044FB"
)
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
plot(national_linerange)
ggsave(here::here("figures", "national-latest.png"),
national_linerange, dpi = 150, height = 4, width = 10)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
#coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
plot(plot_count_national)
# National - Rts -------------------------------------------------------------
# Plot Rts
plot_rt_national <- all_r %>%
filter(date >= as.Date("2020-03-01") & date <= max(ratio_national$date)) %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = date, y = Value, col = type, fill = type)) +
geom_ribbon(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.1, size = 0.2) +
geom_ribbon(aes(col = NULL, ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(strip.text.x = element_blank()) +
theme(axis.text.x = element_blank()) +
labs(title = "Rt estimates", y = "R", x = "", col = "Data source", fill = "Data source") +
theme(legend.position = "top")
plot(plot_rt_national)
# # Public tests / admissions
plot_ratio_national <- ratio_national %>%
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower50_test_adm, ymax = upper50_test_adm),
alpha = 0.2) +
geom_ribbon(aes(ymin = lower95_test_adm, ymax = upper95_test_adm),
alpha = 0.1, size = 0.2) +
geom_line(aes(y = lower50_test_adm), alpha = 0.2) +
geom_line(aes(y = upper50_test_adm), alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date)), ylim = c(0.5, 1.5)) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(strip.text.x = element_blank()) +
theme(axis.text.x = element_blank()) +
labs(title = "Rt(cases) / Rt(deaths)",
y = "Ratio", x = "", col = "Data", fill = "Data")
plot(plot_ratio_national)
View(ratio_national)
# # Public tests / admissions
plot_ratio_national <- ratio_national %>%
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower50_case_deaths, ymax = upper50_case_deaths),
alpha = 0.2) +
geom_ribbon(aes(ymin = lower95_case_deaths, ymax = upper95_case_deaths),
alpha = 0.1, size = 0.2) +
geom_line(aes(y = lower50_case_deaths), alpha = 0.2) +
geom_line(aes(y = upper50_case_deaths), alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
coord_cartesian(xlim = c(as.Date("2020-03-01"), max(ratio_national$date)), ylim = c(0.5, 1.5)) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(strip.text.x = element_blank()) +
theme(axis.text.x = element_blank()) +
labs(title = "Rt(cases) / Rt(deaths)",
y = "Ratio", x = "", col = "Data", fill = "Data")
plot(plot_ratio_national)
# National - counts, Rts, ratios together -------------------------------------------------------------
plot_all_national <-
plot_count_national +
plot_rt_national +
plot_ratio_national +
plot_layout(nrow = 3) +
theme(legend.position = 'top')
library(patchwork)
# National - counts, Rts, ratios together -------------------------------------------------------------
plot_all_national <-
plot_count_national +
plot_rt_national +
plot_ratio_national +
plot_layout(nrow = 3) +
theme(legend.position = 'top')
plot(plot_all_national)
View(ratio_national)
# National - counts -------------------------------------------------------------
# # Plot counts
plot_count_national <-
ggplot(count_all_national) +
geom_line(aes(x = Date, y = z_score, colour = `Data source`)) +
coord_cartesian(xlim = c(min(ratio_national$date), max(ratio_national$date))) +
cowplot::theme_cowplot(font_size = 11) +
scale_color_manual(values = colours) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(title = "Standardised counts", y = "z-score", x = "")
# National - Rts -------------------------------------------------------------
# Plot Rts
plot_rt_national <- all_r %>%
filter(date >= min(ratio_national$date) & date <= max(ratio_national$date)) %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = date, y = Value, col = type, fill = type)) +
geom_ribbon(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.1, size = 0.2) +
geom_ribbon(aes(col = NULL, ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(strip.text.x = element_blank()) +
theme(axis.text.x = element_blank()) +
labs(title = "Rt estimates", y = "R", x = "", col = "Data source", fill = "Data source") +
theme(legend.position = "top")
# # Public tests / admissions
plot_ratio_national <- ratio_national %>%
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower50_case_deaths, ymax = upper50_case_deaths),
alpha = 0.2) +
geom_ribbon(aes(ymin = lower95_case_deaths, ymax = upper95_case_deaths),
alpha = 0.1, size = 0.2) +
geom_line(aes(y = lower50_case_deaths), alpha = 0.2) +
geom_line(aes(y = upper50_case_deaths), alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
coord_cartesian(ylim = c(0.5, 1.5)) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
theme(strip.text.x = element_blank()) +
theme(axis.text.x = element_blank()) +
labs(title = "Rt(cases) / Rt(deaths)",
y = "Ratio", x = "", col = "Data", fill = "Data")
# National - counts, Rts, ratios together -------------------------------------------------------------
plot_all_national <-
plot_count_national +
plot_rt_national +
plot_ratio_national +
plot_layout(nrow = 3) +
theme(legend.position = 'top')
plot(plot_all_national)
# # Public tests / admissions
plot_ratio_national <- ratio_national %>%
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower50_case_deaths, ymax = upper50_case_deaths),
alpha = 0.2) +
geom_ribbon(aes(ymin = lower95_case_deaths, ymax = upper95_case_deaths),
alpha = 0.1, size = 0.2) +
geom_line(aes(y = lower50_case_deaths), alpha = 0.2) +
geom_line(aes(y = upper50_case_deaths), alpha = 0.2) +
geom_hline(yintercept = 1, linetype = 2) +
coord_cartesian(ylim = c(0.5, 1.5)) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot(font_size = 11) +
theme(panel.spacing.x = unit(0.5, "cm")) +
#theme(strip.text.x = element_blank()) +
#theme(axis.text.x = element_blank()) +
labs(title = "Rt(cases) / Rt(deaths)",
y = "Ratio", x = "", col = "Data", fill = "Data")
# National - counts, Rts, ratios together -------------------------------------------------------------
plot_all_national <-
plot_count_national +
plot_rt_national +
plot_ratio_national +
plot_layout(nrow = 3) +
theme(legend.position = 'top')
plot(plot_all_national)
ggsave(here::here("figures", "national_rt_and_ratios.png")) #,
ggsave(here::here("figures", "national_rt_and_ratios.png"),
plot_all_national, dpi = 330, height = 9, width = 4))
ggsave(here::here("figures", "national_rt_and_ratios.png"),
plot_all_national, dpi = 330, height = 9, width = 4)
ggsave(here::here("figures", "national_rt_and_ratios.png"),
plot_all_national, dpi = 330, height = 8, width = 4)
ggsave(here::here("figures", "national-latest.png"),
national_linerange, dpi = 150, height = 4, width = 4)
ggsave(here::here("figures", "national-latest.png"),
national_linerange, dpi = 150, height = 3, width = 4)
ggsave(here::here("figures", "national-latest.png"),
national_linerange, dpi = 150, height = 3, width = 5)
ggsave(here::here("figures", "national-latest.png"),
national_linerange, dpi = 300, height = 3, width = 5)
last_estimate_date <- unique(paste(last_estimate$`Day of Value`, 0, last_estimate$`Month of Value`, last_estimate$`Year of Value`,
sep = "-"))
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
last_estimate_date <- unique(paste(last_estimate$`Day of Value`, last_estimate$`Month of Value`, last_estimate$`Year of Value`,
sep = "-"))
national_linerange <- last_estimate %>%
filter(Geography %in% nation_names) %>%
ggplot(aes(x = type, y = Value, col = type)) +
geom_linerange(aes(ymin = `Quantile 0.05`, ymax = `Quantile 0.95`),
alpha = 0.4, size = 5) +
geom_linerange(aes(ymin = `Quantile 0.25`, ymax = `Quantile 0.75`),
alpha = 0.4, size = 5) +
geom_hline(yintercept = 1, linetype = 2) +
scale_color_manual(values = colours) +
scale_fill_manual(values = colours) +
cowplot::theme_cowplot() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
labs(y = "Rt", x = paste0("US national estimate as of ", last_estimate_date), col = "Data")
